# web service1 config.
server {
    listen 80;
    listen 443 ssl http2;
    # Goes into host file
    server_name youtube.downloader.local;

    # Path for SSL config/key/certificate
    ssl_certificate /etc/ssl/certs/nginx/youtube-downloader.crt;
    ssl_certificate_key /etc/ssl/certs/nginx/youtube-downloader.key;
    include /etc/nginx/includes/ssl.conf;
    include /etc/nginx/includes/proxy.conf;




    location /ui/ {
        proxy_pass http://youtube_downloader_frontend_app_1/;
    }
    location /search/ {
        proxy_pass http://youtube_downloader_elasticsearch_app_1:9200/;
    }
    location /api/ {
        proxy_pass http://youtube_downloader_backend_app_1:8000/;
        # proxy_pass http://127.0.0.1:5000/;
    }
    location /ping {
        default_type application/json;
        return 200 '{"code":200, "reply": "pong", "hostname": "$hostname", "host": "$host"}';
    }
    location /assets/ {
        root /var/www/html/;
    }
    # # Fallback locations
    # location / {
    #     # include /etc/nginx/includes/proxy.conf;
    #     proxy_pass http://youtube.downloader.local/ui/v1;
    # }
    # location /ui/* {
    #     # include /etc/nginx/includes/proxy.conf;
    #     proxy_pass http://youtube.downloader.local/ui/v1;
    # }
    # location /api/* {
    #     # include /etc/nginx/includes/proxy.conf;
    #     proxy_pass http://youtube.downloader.local/api/v1;
    # }

    # access_log off;
    access_log /var/log/nginx/access.log;
    # error_log /var/log/nginx/error.log error;
    error_log /var/log/nginx/error.log;
}

# # web service2 config.
# server {
#     listen 80;
#     # listen 443 ssl http2;
#     server_name example2.test;

#     # Path for SSL config/key/certificate
#     ssl_certificate /etc/ssl/certs/nginx/example2.crt;
#     ssl_certificate_key /etc/ssl/certs/nginx/example2.key;
#     include /etc/nginx/includes/ssl.conf;

#     location / {
#         include /etc/nginx/includes/proxy.conf;
#         proxy_pass http://example2_app_1;
#     }

#     access_log off;
#     error_log /var/log/nginx/error.log error;
# }

# Default
# server {
#     listen 80 default_server;

#     server_name _;
#     root /var/www/html;

#     charset UTF-8;

#     error_page 404 /backend-not-found.html;
#     location = /backend-not-found.html {
#         allow all;
#     }
#     location / {
#         return 404;
#     }

#     access_log off;
#     log_not_found off;
#     error_log /var/log/nginx/error.log error;
# }